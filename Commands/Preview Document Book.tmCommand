<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require 'fileutils'

f = ENV['TM_FILEPATH']
fdir = File.dirname(f)
fbase = File.basename(f, File.extname(f))
f2 = ENV['HOME'] + '/Desktop/asciidocOutput/'
FileUtils.mkdir(f2) unless File.exist?(f2)
f2 = f2 + fbase + '.html'
ad = '/usr/local/bin/asciidoc'
# blap - let's use cutting edge instead
# ad = ENV['HOME'] + '/asciidocCuttingEdge/asciidoc/asciidoc.py'
s = %{#{ad} --verbose -d book -a stylesheet=stylesheets/extra.css -a quirks! -a data-uri -o "#{f2}" }
s = s + %{"#{f}"}

=begin
puts "&lt;pre&gt;"
puts "Converting #{f}..."
require 'open3'
Open3.popen2e(s) do |i,o,t|
  o.sync = true
  while o.gets # not helping, might as well just o.read
    puts $_
  end
end
puts "&lt;/pre&gt;"
=end

require 'shellwords'
a = s.shellsplit
require "#{ENV['TM_SUPPORT_PATH']}/lib/tm/executor"
TextMate::Executor.run(*a, :use_hashbang =&gt; false, :verb =&gt; "Converting")

`open "#{f2}"`
</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^H</string>
	<key>name</key>
	<string>Preview Document Book</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>text.asciidoc</string>
	<key>uuid</key>
	<string>A3B1C275-6646-471E-B032-FAEFEEF68FC8</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
